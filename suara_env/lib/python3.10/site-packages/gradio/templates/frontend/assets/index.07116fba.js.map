{"version":3,"file":"index.07116fba.js","sources":["../../../../ui/packages/form/src/CheckboxGroup.svelte","../../../../ui/packages/app/src/components/CheckboxGroup/CheckboxGroup.svelte","../../../../ui/packages/app/src/components/CheckboxGroup/index.ts"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\timport { get_styles } from \"@gradio/utils\";\n\timport type { Styles } from \"@gradio/utils\";\n\n\texport let value: Array<string> = [];\n\texport let style: Styles = {};\n\texport let choices: Array<string>;\n\texport let disabled: boolean = false;\n\texport let label: string;\n\texport let show_label: boolean;\n\n\tconst dispatch = createEventDispatcher<{ change: Array<string> }>();\n\n\tconst toggleChoice = (choice: string) => {\n\t\tif (value.includes(choice)) {\n\t\t\tvalue.splice(value.indexOf(choice), 1);\n\t\t} else {\n\t\t\tvalue.push(choice);\n\t\t}\n\t\tdispatch(\"change\", value);\n\t\tvalue = value;\n\t};\n\n\t$: ({ item_container } = get_styles(style, [\"item_container\"]));\n</script>\n\n<BlockTitle {show_label}>{label}</BlockTitle>\n\n<div class=\"wrap\" data-testid=\"checkbox-group\">\n\t{#each choices as choice}\n\t\t<label class:disabled style={item_container}>\n\t\t\t<input\n\t\t\t\t{disabled}\n\t\t\t\ton:change={() => toggleChoice(choice)}\n\t\t\t\tchecked={value.includes(choice)}\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tname=\"test\"\n\t\t\t/>\n\t\t\t<span class=\"ml-2\">{choice}</span>\n\t\t</label>\n\t{/each}\n</div>\n\n<style>\n\t.wrap {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: var(--size-2);\n\t}\n\tlabel {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tcursor: pointer;\n\t\tbox-shadow: var(--shadow-drop);\n\t\tborder: 1px solid var(--checkbox-label-border-color-base);\n\t\tborder-radius: var(--radius-lg);\n\t\tbackground: var(--checkbox-label-background-base);\n\t\tpadding: var(--size-1-5) var(--size-3);\n\t\tcolor: var(--color-text-body);\n\t\tfont-size: var(--scale-00);\n\t\tline-height: var(--line-md);\n\t}\n\n\tlabel:hover {\n\t\tbackground: var(--checkbox-label-background-hover);\n\t}\n\n\tlabel:focus {\n\t\tbackground: var(--checkbox-label-background-focus);\n\t}\n\tlabel > * + * {\n\t\tmargin-left: var(--size-2);\n\t}\n\n\tinput {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\tbox-shadow: 0 0 0 var(--shadow-spread) var(--ring-color), var(--shadow-drop);\n\t\tborder: 1px solid var(--checkbox-border-color-base);\n\t\tborder-radius: var(--checkbox-border-radius);\n\t\tbackground-color: var(--checkbox-background-base);\n\t\tfont-size: var(--scale-00);\n\t\tline-height: var(--line-sm);\n\t}\n\n\tinput:checked {\n\t\tborder-color: var(--checkbox-border-color-selected);\n\t\tbackground-color: var(--checkbox-background-selected);\n\t}\n\n\tinput:hover {\n\t\tborder-color: var(--checkbox-border-color-hover);\n\t\tbackground-color: var(--checkbox-background-hover);\n\t}\n\n\tinput:focus {\n\t\t--ring-color: var(--color-focus-ring);\n\t\tborder-color: var(--checkbox-border-color-focus);\n\t\tbackground-color: var(--checkbox-background-focus);\n\t}\n\n\tinput:checked:focus {\n\t\tborder-color: var(--checkbox-background-selected);\n\t\tbackground-color: var(--checkbox-background-selected);\n\t}\n\n\tinput:checked:hover {\n\t\tborder-color: var(--checkbox-background-selected);\n\t\tbackground-color: var(--checkbox-background-selected);\n\t}\n\n\tinput[disabled],\n\t.disabled {\n\t\tcursor: not-allowed;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { CheckboxGroup } from \"@gradio/form\";\n\timport { Block } from \"@gradio/atoms\";\n\timport StatusTracker from \"../StatusTracker/StatusTracker.svelte\";\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\n\timport type { Styles } from \"@gradio/utils\";\n\n\texport let elem_id: string = \"\";\n\texport let visible: boolean = true;\n\texport let value: Array<string> = [];\n\texport let choices: Array<string>;\n\texport let style: Styles = {};\n\texport let mode: \"static\" | \"dynamic\";\n\texport let label: string = \"Checkbox Group\";\n\texport let show_label: boolean;\n\n\texport let loading_status: LoadingStatus;\n</script>\n\n<Block\n\t{visible}\n\t{elem_id}\n\ttype=\"fieldset\"\n\tdisable={typeof style.container === \"boolean\" && !style.container}\n>\n\t<StatusTracker {...loading_status} />\n\n\t<CheckboxGroup\n\t\tbind:value\n\t\t{choices}\n\t\t{label}\n\t\t{style}\n\t\t{show_label}\n\t\ton:change\n\t\tdisabled={mode === \"static\"}\n\t/>\n</Block>\n","export { default as Component } from \"./CheckboxGroup.svelte\";\nexport const modes = [\"static\", \"dynamic\"];\n\nexport const document = (config: Record<string, any>) => ({\n\ttype: \"Array<string>\",\n\tdescription: \"list of selected choices\",\n\texample_data: config.choices.length ? [config.choices[0]] : []\n});\n"],"names":[],"mappings":"yjBA4B0B,wCAAA,oDAYH,iJAJV,KAAM,SAAS,4HAJG,gEAA7B,SACC,cAOA,gGAJU,KAAM,SAAS,mCAIL,oCARQ,kKADvB,0BAAL,+MADH,kKACQ,uBAAL,6HAAA,wIAzBS,eACA,eACA,cACA,WAAoB,OACpB,YACA,qBAEL,GAAW,IAEX,EAAgB,IACjB,EAAM,SAAS,CAAM,EACxB,EAAM,OAAO,EAAM,QAAQ,CAAM,EAAG,CAAC,EAErC,EAAM,KAAK,CAAM,EAElB,EAAS,SAAU,CAAK,eAcL,EAAa,CAAM,wPAVjC,kBAAmB,EAAW,GAAQ,gBAAgB,sLCAzC,mKASR,OAAS,qOATD,6IASR,OAAS,uSAXJ,MAAM,WAAc,YAAc,KAAM,uLAAxC,MAAM,WAAc,YAAc,KAAM,gKAhB7C,UAAkB,OAClB,UAAmB,OACnB,eACA,cACA,eACA,WACA,QAAgB,qBAChB,iBAEA,kkBCfC,IAAQ,CAAC,SAAU,SAAS,EAE5B,GAAW,AAAC,KACxB,KAAM,gBACN,YAAa,2BACb,aAAc,EAAO,QAAQ,OAAS,CAAC,EAAO,QAAQ,EAAE,EAAI,EAC7D"}