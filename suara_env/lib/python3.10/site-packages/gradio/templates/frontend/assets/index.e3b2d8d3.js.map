{"version":3,"file":"index.e3b2d8d3.js","sources":["../../../../ui/packages/icons/src/LineChart.svelte","../../../../ui/packages/label/src/Label.svelte","../../../../ui/packages/app/src/components/Label/Label.svelte","../../../../ui/packages/app/src/components/Label/index.ts"],"sourcesContent":["<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\taria-hidden=\"true\"\n\trole=\"img\"\n\tclass=\"iconify iconify--carbon\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tpreserveAspectRatio=\"xMidYMid meet\"\n\tviewBox=\"0 0 32 32\"\n>\n\t<path\n\t\tfill=\"currentColor\"\n\t\td=\"M4 2H2v26a2 2 0 0 0 2 2h26v-2H4v-3h22v-8H4v-4h14V5H4Zm20 17v4H4v-4ZM16 7v4H4V7Z\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\texport let value: {\n\t\tlabel: string;\n\t\tconfidences?: Array<{ label: string; confidence: number }>;\n\t};\n\n\texport let show_label: boolean = true;\n\texport let color: string | undefined = undefined;\n</script>\n\n<div>\n\t<div\n\t\tclass:sr-only={!show_label}\n\t\tclass=\"output-class\"\n\t\tclass:no-confidence={!(\"confidences\" in value)}\n\t\tstyle:background-color={color || \"transparent\"}\n\t>\n\t\t{value.label}\n\t</div>\n\t{#if typeof value === \"object\" && value.confidences}\n\t\t{#each value.confidences as confidence_set}\n\t\t\t<div class=\"confidence-set group\">\n\t\t\t\t<div class=\"inner-wrap \">\n\t\t\t\t\t<div class=\"bar\" style=\"width: {confidence_set.confidence * 100}%\" />\n\t\t\t\t\t<div class=\"label\">\n\t\t\t\t\t\t<div class=\"text\">{confidence_set.label}</div>\n\t\t\t\t\t\t{#if value.confidences}\n\t\t\t\t\t\t\t<div class=\"line\" />\n\t\t\t\t\t\t\t<div class=\"confidence\">\n\t\t\t\t\t\t\t\t{Math.round(confidence_set.confidence * 100)}%\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/each}\n\t{/if}\n</div>\n\n<style>\n\t.output-class {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tpadding: var(--size-6) var(--size-4);\n\t\tcolor: var(--color-text-body);\n\t\tfont-weight: var(--weight-bold);\n\t\tfont-size: var(--scale-3);\n\t}\n\n\t.confidence-set {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: flex-start;\n\t\tmargin-bottom: var(--size-2);\n\t\tcolor: var(--color-text-body);\n\t\tfont-size: var(--scale-00);\n\t\tline-height: var(--line-none);\n\t\tfont-family: var(--font-mono);\n\t}\n\n\t.confidence-set:last-child {\n\t\tmargin-bottom: 0;\n\t}\n\n\t.inner-wrap {\n\t\tflex: 1 1 0%;\n\t}\n\n\t.bar {\n\t\tmargin-bottom: var(--size-1);\n\t\tborder-radius: var(--radius-md);\n\t\tbackground: linear-gradient(\n\t\t\tto right,\n\t\t\tvar(--label-gradient-from),\n\t\t\tvar(--label-gradient-to)\n\t\t);\n\t\theight: var(--size-1);\n\t}\n\n\t.confidence-set:hover .bar {\n\t\tbackground: linear-gradient(\n\t\t\tto right,\n\t\t\tvar(--color-orange-500),\n\t\t\tvar(--label-gradient-to)\n\t\t);\n\t}\n\t.label {\n\t\tdisplay: flex;\n\t\talign-items: baseline;\n\t}\n\n\t.label > * + * {\n\t\tmargin-left: var(--size-2);\n\t}\n\n\t.confidence-set:hover .label {\n\t\tcolor: var(--color-orange-500);\n\t}\n\n\t.text {\n\t\tline-height: var(--line-md);\n\t}\n\n\t.line {\n\t\tflex: 1 1 0%;\n\t\tborder: 1px dashed var(--color-border-primary);\n\t\tpadding-right: var(--size-4);\n\t\tpadding-left: var(--size-4);\n\t}\n\n\t.confidence {\n\t\tmargin-left: auto;\n\t\ttext-align: right;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { Label } from \"@gradio/label\";\n\timport { LineChart as LabelIcon } from \"@gradio/icons\";\n\timport { Block, BlockLabel, Empty } from \"@gradio/atoms\";\n\timport StatusTracker from \"../StatusTracker/StatusTracker.svelte\";\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\n\timport type { Styles } from \"@gradio/utils\";\n\n\texport let elem_id: string = \"\";\n\texport let visible: boolean = true;\n\texport let color: undefined | string = undefined;\n\texport let value: {\n\t\tlabel: string;\n\t\tconfidences?: Array<{ label: string; confidence: number }>;\n\t};\n\texport let label: string = \"Label\";\n\texport let style: Styles = {};\n\n\texport let loading_status: LoadingStatus;\n\texport let show_label: boolean;\n\n\tconst dispatch = createEventDispatcher<{ change: undefined }>();\n\n\t$: value, dispatch(\"change\");\n</script>\n\n<Block\n\ttest_id=\"label\"\n\t{visible}\n\t{elem_id}\n\tdisable={typeof style.container === \"boolean\" && !style.container}\n>\n\t<StatusTracker {...loading_status} />\n\t{#if show_label}\n\t\t<BlockLabel\n\t\t\tIcon={LabelIcon}\n\t\t\t{label}\n\t\t\tdisable={typeof style.container === \"boolean\" && !style.container}\n\t\t/>\n\t{/if}\n\t{#if typeof value === \"object\" && value !== undefined && value !== null}\n\t\t<Label {value} {show_label} {color} />\n\t{:else}\n\t\t<Empty><LabelIcon /></Empty>\n\t{/if}\n</Block>\n","export { default as Component } from \"./Label.svelte\";\nexport const modes = [\"static\"];\n\nexport const document = (config: Record<string, any>) => ({\n\ttype: \"{ label: string; confidences?: Array<{ label: string; confidence: number }>\",\n\tdescription: \"output label and optional set of confidences per label\"\n});\n"],"names":["LabelIcon"],"mappings":"84BAAA,SAWC,iLCSQ,KAAM,iCAAX,8JAAK,KAAM,8BAAX,qIAAA,yDASK,KAAK,MAAM,KAAe,WAAa,GAAG,2DAAE,GAC9C,oFAHA,kBACA,2CACE,KAAK,MAAM,KAAe,WAAa,GAAG,8EAJ1B,KAAe,iBAC7B,KAAM,mKAHoB,KAAe,WAAa,iLAF9D,SACC,OACC,cACA,OACC,oEAF+B,KAAe,WAAa,qBAExC,KAAe,kBAC7B,KAAM,uHATd,KAAM,qBAEI,OAAU,UAAY,KAAM,kIAPvB,2BAEO,gBAAiB,+BAChB,MAAS,0BALnC,SACC,0DAME,KAAM,sCALS,gCAEO,gBAAiB,oCAChB,MAAS,wBAItB,OAAU,UAAY,KAAM,6HAlB7B,YAKA,aAAsB,OACtB,QAA4B,mRC6B/BA,2BAEU,MAAM,WAAc,YAAc,KAAM,wHAAxC,MAAM,WAAc,YAAc,KAAM,83BALvC,gFACd,6DAOO,OAAU,UAAY,OAAU,QAAa,OAAU,kMARhD,qBACd,8eAHW,MAAM,WAAc,YAAc,KAAM,wLAAxC,MAAM,WAAc,YAAc,KAAM,+JAtB7C,UAAkB,OAClB,UAAmB,OACnB,QAA4B,WAC5B,YAIA,QAAgB,YAChB,eAEA,qBACA,qBAEL,GAAW,2TAEP,EAAS,QAAQ,qLCvBf,IAAQ,CAAC,QAAQ,EAEjB,GAAW,AAAC,KACxB,KAAM,8EACN,YAAa,wDACd"}