{"version":3,"file":"Textbox.316a06d8.js","sources":["../../../../ui/packages/form/src/Textbox.svelte","../../../../ui/packages/app/src/components/Textbox/Textbox.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher, tick } from \"svelte\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\n\texport let value: string = \"\";\n\texport let lines: number = 1;\n\texport let placeholder: string = \"Type here...\";\n\texport let label: string;\n\texport let disabled = false;\n\texport let show_label: boolean = true;\n\texport let max_lines: number | false;\n\texport let type: \"text\" | \"password\" | \"email\" = \"text\";\n\n\tlet el: HTMLTextAreaElement | HTMLInputElement;\n\n\t$: value, el && lines !== max_lines && resize({ target: el });\n\t$: handle_change(value);\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: string;\n\t\tsubmit: undefined;\n\t\tblur: undefined;\n\t}>();\n\n\tfunction handle_change(val: string) {\n\t\tdispatch(\"change\", val);\n\t}\n\n\tfunction handle_blur(e: FocusEvent) {\n\t\tdispatch(\"blur\");\n\t}\n\n\tasync function handle_keypress(e: KeyboardEvent) {\n\t\tawait tick();\n\t\tif (e.key === \"Enter\" && e.shiftKey && lines > 1) {\n\t\t\te.preventDefault();\n\t\t\tdispatch(\"submit\");\n\t\t} else if (\n\t\t\te.key === \"Enter\" &&\n\t\t\t!e.shiftKey &&\n\t\t\tlines === 1 &&\n\t\t\tmax_lines >= 1\n\t\t) {\n\t\t\te.preventDefault();\n\t\t\tdispatch(\"submit\");\n\t\t}\n\t}\n\n\tasync function resize(\n\t\tevent: Event | { target: HTMLTextAreaElement | HTMLInputElement }\n\t) {\n\t\tawait tick();\n\t\tif (lines === max_lines) return;\n\n\t\tlet max =\n\t\t\tmax_lines === false\n\t\t\t\t? false\n\t\t\t\t: max_lines === undefined // default\n\t\t\t\t? 21 * 11\n\t\t\t\t: 21 * (max_lines + 1);\n\t\tlet min = 21 * (lines + 1);\n\n\t\tconst target = event.target as HTMLTextAreaElement;\n\t\ttarget.style.height = \"1px\";\n\n\t\tlet scroll_height;\n\t\tif (max && target.scrollHeight > max) {\n\t\t\tscroll_height = max;\n\t\t} else if (target.scrollHeight < min) {\n\t\t\tscroll_height = min;\n\t\t} else {\n\t\t\tscroll_height = target.scrollHeight;\n\t\t}\n\n\t\ttarget.style.height = `${scroll_height}px`;\n\t}\n\n\tfunction text_area_resize(el: HTMLTextAreaElement, value: string) {\n\t\tif (lines === max_lines) return;\n\t\tel.style.overflowY = \"scroll\";\n\t\tel.addEventListener(\"input\", resize);\n\n\t\tif (!value.trim()) return;\n\t\tresize({ target: el });\n\n\t\treturn {\n\t\t\tdestroy: () => el.removeEventListener(\"input\", resize)\n\t\t};\n\t}\n</script>\n\n<!-- svelte-ignore a11y-label-has-associated-control -->\n<label>\n\t<BlockTitle {show_label}>{label}</BlockTitle>\n\n\t{#if lines === 1 && max_lines === 1}\n\t\t{#if type === \"text\"}\n\t\t\t<input\n\t\t\t\tdata-testid=\"textbox\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"scroll-hide\"\n\t\t\t\tbind:value\n\t\t\t\tbind:this={el}\n\t\t\t\t{placeholder}\n\t\t\t\t{disabled}\n\t\t\t\ton:keypress={handle_keypress}\n\t\t\t\ton:blur={handle_blur}\n\t\t\t/>\n\t\t{:else if type === \"password\"}\n\t\t\t<input\n\t\t\t\tdata-testid=\"password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tclass=\"scroll-hide\"\n\t\t\t\tbind:value\n\t\t\t\tbind:this={el}\n\t\t\t\t{placeholder}\n\t\t\t\t{disabled}\n\t\t\t\ton:keypress={handle_keypress}\n\t\t\t\ton:blur={handle_blur}\n\t\t\t\tautocomplete=\"\"\n\t\t\t/>\n\t\t{:else if type === \"email\"}\n\t\t\t<input\n\t\t\t\tdata-testid=\"textbox\"\n\t\t\t\ttype=\"email\"\n\t\t\t\tclass=\"scroll-hide\"\n\t\t\t\tbind:value\n\t\t\t\tbind:this={el}\n\t\t\t\t{placeholder}\n\t\t\t\t{disabled}\n\t\t\t\ton:keypress={handle_keypress}\n\t\t\t\ton:blur={handle_blur}\n\t\t\t\tautocomplete=\"email\"\n\t\t\t/>\n\t\t{/if}\n\t{:else}\n\t\t<textarea\n\t\t\tdata-testid=\"textbox\"\n\t\t\tuse:text_area_resize={value}\n\t\t\tclass=\"scroll-hide\"\n\t\t\tbind:value\n\t\t\tbind:this={el}\n\t\t\t{placeholder}\n\t\t\trows={lines}\n\t\t\t{disabled}\n\t\t\ton:keypress={handle_keypress}\n\t\t\ton:blur={handle_blur}\n\t\t/>\n\t{/if}\n</label>\n\n<style>\n\tlabel {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t}\n\n\tinput[type=\"text\"],\n\tinput[type=\"password\"],\n\tinput[type=\"email\"],\n\ttextarea {\n\t\t--ring-color: transparent;\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\toutline: none !important;\n\t\tbox-shadow: 0 0 0 var(--shadow-spread) var(--ring-color),\n\t\t\tvar(--shadow-inset);\n\t\tborder: 1px solid var(--input-border-color-base);\n\t\tborder-radius: var(--radius-lg);\n\t\tbackground: var(--input-background-base);\n\t\tpadding: var(--size-2-5);\n\t\twidth: 100%;\n\t\tcolor: var(--color-text-body);\n\t\tfont-size: var(--scale-00);\n\t\tline-height: var(--line-sm);\n\t}\n\n\tinput:focus,\n\ttextarea:focus {\n\t\t--ring-color: var(--color-focus-ring);\n\t\tborder-color: var(--input-border-color-focus);\n\t}\n\n\tinput::placeholder,\n\ttextarea::placeholder {\n\t\tcolor: var(--color-text-placeholder);\n\t}\n\n\tinput[disabled],\n\ttextarea[disabled] {\n\t\tbox-shadow: none;\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script lang=\"ts\">\n\timport { TextBox } from \"@gradio/form\";\n\timport { Block } from \"@gradio/atoms\";\n\timport StatusTracker from \"../StatusTracker/StatusTracker.svelte\";\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\n\timport type { Styles } from \"@gradio/utils\";\n\n\texport let label: string = \"Textbox\";\n\texport let elem_id: string = \"\";\n\texport let visible: boolean = true;\n\texport let value: string = \"\";\n\texport let lines: number;\n\texport let placeholder: string = \"\";\n\texport let show_label: boolean;\n\texport let max_lines: number | false;\n\texport let type: \"text\" | \"password\" | \"email\" = \"text\";\n\n\texport let style: Styles = {};\n\n\texport let loading_status: LoadingStatus | undefined = undefined;\n\n\texport let mode: \"static\" | \"dynamic\";\n</script>\n\n<Block\n\t{visible}\n\t{elem_id}\n\tdisable={typeof style.container === \"boolean\" && !style.container}\n>\n\t{#if loading_status}\n\t\t<StatusTracker {...loading_status} />\n\t{/if}\n\n\t<TextBox\n\t\tbind:value\n\t\t{label}\n\t\t{show_label}\n\t\t{lines}\n\t\t{type}\n\t\tmax_lines={!max_lines && mode === \"static\" ? lines + 1 : max_lines}\n\t\t{placeholder}\n\t\ton:change\n\t\ton:submit\n\t\ton:blur\n\t\tdisabled={mode === \"static\"}\n\t/>\n</Block>\n"],"names":[],"mappings":"4hBA6F2B,yCAAA,qLAkDlB,8BAPP,0DAEuB,yCAOT,kBACJ,kEAHH,uEALgB,mGA1ClB,OAAS,oBAYJ,OAAS,wBAaT,OAAS,saAClB,qEAQc,kBACJ,qWAtBV,qEAQc,kBACJ,yUArBV,qEAQc,kBACJ,2QAXP,QAAU,GAAK,OAAc,oHAHnC,gUAxFY,QAAgB,OAChB,QAAgB,MAChB,cAAsB,mBACtB,YACA,WAAW,OACX,aAAsB,OACtB,gBACA,OAAsC,UAE7C,OAKE,GAAW,eAMM,GACtB,EAAS,SAAU,CAAG,aAGF,GACpB,EAAS,MAAM,mBAGe,QACxB,KACF,GAAE,MAAQ,SAAW,EAAE,UAAY,EAAQ,GAI9C,EAAE,MAAQ,UACT,EAAE,UACH,IAAU,GACV,GAAa,IAEb,GAAE,iBACF,EAAS,QAAQ,oBAKlB,WAEM,KACF,IAAU,YAEV,GACH,IAAc,GACX,GACA,IAAc,OACd,GAAK,GACL,GAAM,GAAY,GAClB,EAAM,GAAM,GAAQ,QAElB,GAAS,EAAM,OACrB,EAAO,MAAM,OAAS,SAElB,GACA,GAAO,EAAO,aAAe,EAChC,EAAgB,EACN,EAAO,aAAe,EAChC,EAAgB,EAEhB,EAAgB,EAAO,aAGxB,EAAO,MAAM,UAAY,iBAGA,EAAyB,MAC9C,IAAU,GACd,GAAG,MAAM,UAAY,SACrB,EAAG,iBAAiB,QAAS,CAAM,IAE9B,EAAM,QACX,UAAS,OAAQ,KAGhB,YAAe,EAAG,oBAAoB,QAAS,CAAM,6EAgBzC,uFAYA,uFAaA,uFAcD,oUA9HH,GAAM,IAAU,GAAa,GAAS,OAAQ,kBACrD,EAAc,CAAK,4NCgBF,gKAAA,mIADf,qGAUQ,MAAa,QAAS,SAAW,KAAQ,EAAI,+BAK/C,QAAS,uPAff,0OAUQ,MAAa,QAAS,SAAW,KAAQ,EAAI,qDAK/C,QAAS,iQAjBJ,MAAM,WAAc,YAAc,KAAM,yLAAxC,MAAM,WAAc,YAAc,KAAM,iKApB7C,QAAgB,cAChB,UAAkB,OAClB,UAAmB,OACnB,QAAgB,OAChB,YACA,cAAsB,OACtB,iBACA,gBACA,OAAsC,WAEtC,eAEA,iBAA4C,WAE5C"}