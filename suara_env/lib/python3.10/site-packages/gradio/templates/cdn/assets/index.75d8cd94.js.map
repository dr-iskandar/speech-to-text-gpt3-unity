{"version":3,"file":"index.75d8cd94.js","sources":["../../../../ui/packages/icons/src/Chat.svelte","../../../../ui/packages/chatbot/src/ChatBot.svelte","../../../../ui/packages/app/src/components/Chatbot/Chatbot.svelte","../../../../ui/packages/app/src/components/Chatbot/index.ts"],"sourcesContent":["<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\taria-hidden=\"true\"\n\trole=\"img\"\n\tclass=\"iconify iconify--carbon\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tpreserveAspectRatio=\"xMidYMid meet\"\n\tviewBox=\"0 0 32 32\"\n>\n\t<path\n\t\tfill=\"currentColor\"\n\t\td=\"M17.74 30L16 29l4-7h6a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h9v2H6a4 4 0 0 1-4-4V8a4 4 0 0 1 4-4h20a4 4 0 0 1 4 4v12a4 4 0 0 1-4 4h-4.84Z\"\n\t/>\n\t<path fill=\"currentColor\" d=\"M8 10h16v2H8zm0 6h10v2H8z\" />\n</svg>\n","<script lang=\"ts\">\n\timport { beforeUpdate, afterUpdate, createEventDispatcher } from \"svelte\";\n\timport { colors } from \"@gradio/theme\";\n\timport type { Styles } from \"@gradio/utils\";\n\n\texport let value: Array<[string | null, string | null]> | null;\n\tlet old_value: Array<[string | null, string | null]> | null;\n\texport let style: Styles = {};\n\texport let pending_message: boolean = false;\n\n\tlet div: HTMLDivElement;\n\tlet autoscroll: Boolean;\n\n\tconst dispatch = createEventDispatcher<{ change: undefined }>();\n\n\t$: _value = value || [];\n\tbeforeUpdate(() => {\n\t\tautoscroll =\n\t\t\tdiv && div.offsetHeight + div.scrollTop > div.scrollHeight - 20;\n\t});\n\n\tafterUpdate(() => {\n\t\tif (autoscroll) {\n\t\t\tdiv.scrollTo(0, div.scrollHeight);\n\t\t\tdiv.querySelectorAll(\"img\").forEach((n) => {\n\t\t\t\tn.addEventListener(\"load\", () => {\n\t\t\t\t\tdiv.scrollTo(0, div.scrollHeight);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n\n\t$: {\n\t\tif (value !== old_value) {\n\t\t\told_value = value;\n\t\t\tdispatch(\"change\");\n\t\t}\n\t}\n\n\t$: _colors = get_colors();\n\n\tfunction get_color(c: string) {\n\t\tif (c in colors) {\n\t\t\treturn colors[c as keyof typeof colors].primary;\n\t\t} else {\n\t\t\treturn c;\n\t\t}\n\t}\n\n\tfunction get_colors() {\n\t\tif (!style.color_map) {\n\t\t\treturn [\"#fb923c\", \"#9ca3af\"];\n\t\t} else {\n\t\t\treturn [get_color(style.color_map[0]), get_color(style.color_map[1])];\n\t\t}\n\t}\n</script>\n\n<div class=\"wrap\" bind:this={div}>\n\t<div class=\"message-wrap\">\n\t\t{#each _value as message, i}\n\t\t\t<div\n\t\t\t\tdata-testid=\"user\"\n\t\t\t\tclass:latest={i === _value.length - 1}\n\t\t\t\tclass=\"message user\"\n\t\t\t\tclass:hide={message[0] === null}\n\t\t\t\tstyle={\"background-color:\" + _colors[0]}\n\t\t\t>\n\t\t\t\t{@html message[0]}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tdata-testid=\"bot\"\n\t\t\t\tclass:latest={i === _value.length - 1}\n\t\t\t\tclass=\"message bot\"\n\t\t\t\tclass:hide={message[1] === null}\n\t\t\t\tstyle={\"background-color:\" + _colors[1]}\n\t\t\t>\n\t\t\t\t{@html message[1]}\n\t\t\t</div>\n\t\t{/each}\n\t\t{#if pending_message}\n\t\t\t<div\n\t\t\t\tdata-testid=\"bot\"\n\t\t\t\tclass=\"message user pending\"\n\t\t\t\tstyle={\"background-color:\" + _colors[0]}\n\t\t\t>\n\t\t\t\t<div class=\"dot-flashing\" />\n\t\t\t\t&nbsp;\n\t\t\t\t<div class=\"dot-flashing\" />\n\t\t\t\t&nbsp;\n\t\t\t\t<div class=\"dot-flashing\" />\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n</div>\n\n<style>\n\t.wrap {\n\t\theight: 100%;\n\t\toverflow-y: auto;\n\t}\n\n\t.message-wrap {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: flex-end;\n\t\tpadding: var(--size-3);\n\t}\n\n\t.message-wrap > * + * {\n\t\tmargin-top: var(--size-4);\n\t}\n\t.message-wrap > div :global(img) {\n\t\tborder-radius: 13px;\n\t\tmax-width: 30vw;\n\t}\n\n\t.message {\n\t\tborder-width: var(--chatbot-border-width);\n\t\tborder-style: solid;\n\t\tborder-radius: var(--chatbot-border-radius);\n\t\tpadding: var(--size-2) var(--size-3);\n\t\tmax-width: 75%;\n\t\tfont-size: var(--scale-00);\n\t\tline-height: var(--line-xs);\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.user {\n\t\tborder-color: var(--chatbot-user-border-color-base);\n\t\tborder-bottom-right-radius: 0;\n\t\tbackground: var(--chatbot-user-background-base);\n\t\tcolor: var(--chatbot-user-text-color-base);\n\t}\n\n\t.user.latest {\n\t\tborder-color: var(--chatbot-user-border-color-latest);\n\t\tbackground: var(--chatbot-user-background-latest);\n\t\tcolor: var(--chatbot-user-text-color-latest);\n\t}\n\n\t.bot {\n\t\tplace-self: start;\n\t\tborder-color: var(--chatbot-bot-border-color-base);\n\t\tborder-bottom-left-radius: 0;\n\t\tbackground: var(--chatbot-bot-background-base);\n\t\tcolor: var(--chatbot-bot-text-color-base);\n\t}\n\n\t.bot.latest {\n\t\tborder-color: var(--chatbot-bot-border-color-latest);\n\t\tbackground: var(--chatbot-bot-background-latest);\n\t\tcolor: var(--chatbot-bot-text-color-latest);\n\t}\n\n\t.pending {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgap: 2px;\n\t}\n\t.dot-flashing {\n\t\tanimation: dot-flashing 1s infinite linear alternate;\n\t\tborder-radius: 5px;\n\t\tbackground-color: white;\n\t\twidth: 5px;\n\t\theight: 5px;\n\t\tcolor: white;\n\t}\n\t.dot-flashing:nth-child(2) {\n\t\tanimation-delay: 0.33s;\n\t}\n\t.dot-flashing:nth-child(3) {\n\t\tanimation-delay: 0.66s;\n\t}\n\n\t@keyframes dot-flashing {\n\t\t0% {\n\t\t\topacity: 0.8;\n\t\t}\n\t\t50% {\n\t\t\topacity: 0.5;\n\t\t}\n\t\t100% {\n\t\t\topacity: 0.8;\n\t\t}\n\t}\n\n\t.hide {\n\t\tdisplay: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { ChatBot } from \"@gradio/chatbot\";\n\timport { Block, BlockLabel } from \"@gradio/atoms\";\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\n\timport type { Styles } from \"@gradio/utils\";\n\timport { Chat } from \"@gradio/icons\";\n\n\texport let elem_id: string = \"\";\n\texport let visible: boolean = true;\n\texport let value: Array<[string | null, string | null]> = [];\n\texport let style: Styles = {};\n\texport let label: string;\n\texport let show_label: boolean = true;\n\texport let color_map: Record<string, string> = {};\n\n\t$: if (!style.color_map && Object.keys(color_map).length) {\n\t\tstyle.color_map = color_map;\n\t}\n\n\texport let loading_status: LoadingStatus | undefined;\n</script>\n\n<Block {elem_id} {visible}>\n\t{#if show_label}\n\t\t<BlockLabel\n\t\t\t{show_label}\n\t\t\tIcon={Chat}\n\t\t\tlabel={label || \"Chatbot\"}\n\t\t\tdisable={typeof style.container === \"boolean\" && !style.container}\n\t\t/>\n\t{/if}\n\t<ChatBot\n\t\t{style}\n\t\t{value}\n\t\tpending_message={loading_status?.status === \"pending\"}\n\t\ton:change\n\t/>\n</Block>\n","export { default as Component } from \"./Chatbot.svelte\";\nexport const modes = [\"static\"];\n\nexport const document = (config: Record<string, any>) => ({\n\ttype: \"Array<[string, string]>\",\n\tdescription: \"Represents list of message pairs of chat message.\",\n\texample_data: config.value ?? [\n\t\t[\"Hi\", \"Hello\"],\n\t\t[\"1 + 1\", \"2\"]\n\t]\n});\n"],"names":[],"mappings":"igCAAA,SAWC,OAIA,uLCqDU,MAAQ,cASR,MAAQ,kIAXR,oBAAsB,KAAQ,iBAHvB,QAAM,KAAO,OAAS,CAAC,aAEzB,MAAQ,KAAO,IAAI,mFAUxB,oBAAsB,KAAQ,iBAHvB,QAAM,KAAO,OAAS,CAAC,aAEzB,MAAQ,KAAO,IAAI,UAbhC,gCASA,2CAFQ,MAAQ,oCAFR,oBAAsB,KAAQ,sCAHvB,QAAM,KAAO,OAAS,CAAC,kBAEzB,MAAQ,KAAO,IAAI,cAYxB,MAAQ,oCAFR,oBAAsB,KAAQ,sCAHvB,QAAM,KAAO,OAAS,CAAC,kBAEzB,MAAQ,KAAO,IAAI,uGAYJ;AAAA;AAAA,KAE3B,iBAA2B;AAAA;AAAA,KAE3B,wOANO,oBAAsB,KAAQ,YAHtC,SAKC,cAEA,cAEA,2BANO,oBAAsB,KAAQ,8DAxBhC,0BAAL,mCAoBG,sLAtBP,SACC,qGACQ,uBAAL,0HAAA,OAoBG,4IA3EK,WACP,GACO,eACA,kBAA2B,MAElC,EACA,OAEE,GAAW,IAGjB,OACC,EACC,GAAO,EAAI,aAAe,EAAI,UAAY,EAAI,aAAe,KAG/D,OACK,GACH,GAAI,SAAS,EAAG,EAAI,YAAY,EAChC,EAAI,iBAAiB,KAAK,EAAE,QAAS,IACpC,EAAE,iBAAiB,YAClB,EAAI,SAAS,EAAG,EAAI,YAAY,oBAejB,SACd,KAAK,GACD,EAAO,GAA0B,QAEjC,qBAKH,GAAM,WAGF,EAAU,EAAM,UAAU,IAAK,EAAU,EAAM,UAAU,MAFzD,UAAW,SAAS,2CAOF,6KA3CzB,EAAS,sBAkBP,IAAU,QACb,EAAY,CAAK,EACjB,EAAS,QAAQ,QAIhB,EAAU,uLCbL,QACC,MAAS,wBACA,MAAM,WAAc,YAAc,KAAM,qHADjD,MAAS,iCACA,MAAM,WAAc,YAAc,KAAM,gIALrD,wEAWa,MAAgB,SAAW,0HAXxC,wLAWa,MAAgB,SAAW,ofA3BlC,UAAkB,OAClB,UAAmB,OACnB,eACA,eACA,YACA,aAAsB,OACtB,mBAMA,qXAJH,EAAM,WAAa,OAAO,KAAK,CAAS,EAAE,YACjD,EAAM,UAAY,8LCfP,IAAQ,CAAC,QAAQ,EAEjB,GAAW,AAAC,KACxB,KAAM,0BACN,YAAa,oDACb,aAAc,EAAO,OAAS,CAC7B,CAAC,KAAM,OAAO,EACd,CAAC,QAAS,GAAG,EAEf"}