{"version":3,"file":"index.a5ab0176.js","sources":["../../../../ui/packages/file/src/utils.ts","../../../../ui/packages/file/src/FilePreview.svelte","../../../../ui/packages/file/src/File.svelte","../../../../ui/packages/file/src/FileUpload.svelte","../../../../ui/packages/app/src/components/File/File.svelte","../../../../ui/packages/app/src/components/File/index.ts"],"sourcesContent":["import type { FileData } from \"@gradio/upload\";\n\nexport const prettyBytes = (bytes: number): string => {\n\tlet units = [\"B\", \"KB\", \"MB\", \"GB\", \"PB\"];\n\tlet i = 0;\n\twhile (bytes > 1024) {\n\t\tbytes /= 1024;\n\t\ti++;\n\t}\n\tlet unit = units[i];\n\treturn bytes.toFixed(1) + \" \" + unit;\n};\n\nexport const display_file_name = (value: FileData): string => {\n\tvar str: string;\n\tstr = value.orig_name || value.name;\n\tif (str.length > 30) {\n\t\treturn `${str.substr(0, 30)}...`;\n\t} else return str;\n};\n\nexport const display_file_size = (\n\tvalue: FileData | Array<FileData>\n): string => {\n\tvar total_size = 0;\n\tif (Array.isArray(value)) {\n\t\tfor (var file of value) {\n\t\t\tif (file.size !== undefined) total_size += file.size;\n\t\t}\n\t} else {\n\t\ttotal_size = value.size || 0;\n\t}\n\treturn prettyBytes(total_size);\n};\n","<script lang=\"ts\">\n\timport type { FileData } from \"@gradio/upload\";\n\timport { Download } from \"@gradio/icons\";\n\timport { IconButton } from \"@gradio/atoms\";\n\timport { display_file_name, display_file_size } from \"./utils\";\n\n\texport let value: FileData | FileData[];\n</script>\n\n<table class=\"file-preview\">\n\t<tbody>\n\t\t{#each Array.isArray(value) ? value : [value] as file}\n\t\t\t<tr class=\"file\">\n\t\t\t\t<td>\n\t\t\t\t\t{display_file_name(file)}\n\t\t\t\t</td>\n\n\t\t\t\t<td>\n\t\t\t\t\t{display_file_size(file)}\n\t\t\t\t</td>\n\n\t\t\t\t<td class=\"download\">\n\t\t\t\t\t{#if file.data}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={file.data}\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\tdownload={window.__is_colab__\n\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t: file.orig_name || file.name}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload\n\t\t\t\t\t\t</a>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\tUploading...\n\t\t\t\t\t{/if}\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t{/each}\n\t</tbody>\n</table>\n\n<style>\n\ttd {\n\t\twidth: 45%;\n\t}\n\n\ttd:last-child {\n\t\twidth: 10%;\n\t\ttext-align: right;\n\t}\n\n\t.file-preview {\n\t\tmargin-top: var(--size-7);\n\t\tmargin-bottom: var(--size-7);\n\t\twidth: var(--size-full);\n\t\tmax-height: var(--size-60);\n\t\toverflow-y: auto;\n\t\tcolor: var(--color-text-body);\n\t}\n\t.file {\n\t\twidth: var(--size-full);\n\t}\n\n\t.file > * {\n\t\tpadding: var(--size-1) var(--size-2-5);\n\t}\n\n\t.download:hover {\n\t\ttext-decoration: underline;\n\t}\n\t.download > a {\n\t\tcolor: var(--color-text-link-base);\n\t}\n\n\t.download > a:hover {\n\t\tcolor: var(--color-text-link-hover);\n\t}\n\t.download > a:visited {\n\t\tcolor: var(--color-text-link-visited);\n\t}\n\t.download > a:active {\n\t\tcolor: var(--color-text-link-active);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport type { FileData } from \"@gradio/upload\";\n\timport { BlockLabel, Empty } from \"@gradio/atoms\";\n\timport { File } from \"@gradio/icons\";\n\timport FilePreview from \"./FilePreview.svelte\";\n\n\texport let value: FileData | FileData[] | null = null;\n\texport let label: string;\n\texport let show_label: boolean = true;\n</script>\n\n<BlockLabel {show_label} Icon={File} label={label || \"File\"} />\n\n{#if value}\n\t<div class=\"file-preview\">\n\t\t<FilePreview {value} />\n\t</div>\n{:else}\n\t<Empty size=\"large\" unpadded_box={true}><File /></Empty>\n{/if}\n\n<style>\n\t.file-preview {\n\t\toverflow-x: auto;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, tick } from \"svelte\";\n\timport { Upload, ModifyUpload } from \"@gradio/upload\";\n\timport type { FileData } from \"@gradio/upload\";\n\timport { BlockLabel } from \"@gradio/atoms\";\n\timport { File } from \"@gradio/icons\";\n\n\timport FilePreview from \"./FilePreview.svelte\";\n\n\texport let value: null | FileData | Array<FileData>;\n\n\texport let label: string;\n\texport let show_label: boolean = true;\n\texport let file_count: string = \"single\";\n\texport let file_types: string[] | null = null;\n\n\tasync function handle_upload({\n\t\tdetail\n\t}: CustomEvent<FileData | Array<FileData>>) {\n\t\tvalue = detail;\n\t\tawait tick();\n\t\tdispatch(\"change\", value);\n\t\tdispatch(\"upload\", detail);\n\t}\n\n\tfunction handle_clear({ detail }: CustomEvent<null>) {\n\t\tvalue = null;\n\t\tdispatch(\"change\", value);\n\t\tdispatch(\"clear\");\n\t}\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: Array<FileData> | FileData | null;\n\t\tclear: undefined;\n\t\tdrag: boolean;\n\t\tupload: Array<FileData> | FileData;\n\t\terror: string;\n\t}>();\n\n\tlet accept_file_types: string | null;\n\tif (file_types == null) {\n\t\taccept_file_types = null;\n\t} else {\n\t\tfile_types = file_types.map((x) => {\n\t\t\tif (x.startsWith(\".\")) {\n\t\t\t\treturn x;\n\t\t\t} else {\n\t\t\t\treturn x + \"/*\";\n\t\t\t}\n\t\t});\n\t\taccept_file_types = file_types.join(\", \");\n\t}\n\n\tlet dragging = false;\n\t$: dispatch(\"drag\", dragging);\n</script>\n\n<BlockLabel {show_label} Icon={File} label={label || \"File\"} />\n\n{#if value}\n\t<ModifyUpload on:clear={handle_clear} absolute />\n\t<FilePreview {value} />\n{:else}\n\t<Upload\n\t\ton:load={handle_upload}\n\t\tfiletype={accept_file_types}\n\t\tparse_to_data_url={false}\n\t\t{file_count}\n\t\tbind:dragging\n\t>\n\t\t<slot />\n\t</Upload>\n{/if}\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { File as FileComponent, FileUpload } from \"@gradio/file\";\n\timport { blobToBase64, FileData } from \"@gradio/upload\";\n\timport { normalise_file } from \"@gradio/upload\";\n\timport { Block } from \"@gradio/atoms\";\n\timport UploadText from \"../UploadText.svelte\";\n\timport { upload_files } from \"../../api\";\n\n\timport StatusTracker from \"../StatusTracker/StatusTracker.svelte\";\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\n\n\timport { _ } from \"svelte-i18n\";\n\n\texport let elem_id: string = \"\";\n\texport let visible: boolean = true;\n\texport let value: null | FileData | Array<FileData>;\n\tlet old_value: null | FileData | Array<FileData>;\n\n\texport let mode: \"static\" | \"dynamic\";\n\texport let root: string;\n\texport let label: string;\n\texport let show_label: boolean;\n\texport let file_count: string;\n\texport let file_types: Array<string> = [\"file\"];\n\texport let root_url: null | string;\n\n\texport let loading_status: LoadingStatus;\n\n\t$: _value = normalise_file(value, root, root_url);\n\n\tlet dragging = false;\n\tlet pending_upload = false;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: undefined;\n\t\terror: string;\n\t}>();\n\n\t$: {\n\t\tif (_value !== old_value) {\n\t\t\told_value = _value;\n\t\t\tif (_value === null) {\n\t\t\t\tdispatch(\"change\");\n\t\t\t\tpending_upload = false;\n\t\t\t} else if (mode === \"dynamic\") {\n\t\t\t\tlet files = (Array.isArray(_value) ? _value : [_value]).map(\n\t\t\t\t\t(file_data) => file_data.blob!\n\t\t\t\t);\n\t\t\t\tlet upload_value = _value;\n\t\t\t\tpending_upload = true;\n\t\t\t\tupload_files(root, files).then((response) => {\n\t\t\t\t\tif (upload_value !== _value) {\n\t\t\t\t\t\t// value has changed since upload started\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tpending_upload = false;\n\t\t\t\t\tif (response.error) {\n\t\t\t\t\t\t(Array.isArray(_value) ? _value : [_value]).forEach(\n\t\t\t\t\t\t\tasync (file_data, i) => {\n\t\t\t\t\t\t\t\tfile_data.data = await blobToBase64(file_data.blob!);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(Array.isArray(_value) ? _value : [_value]).forEach(\n\t\t\t\t\t\t\t(file_data, i) => {\n\t\t\t\t\t\t\t\tif (response.files) {\n\t\t\t\t\t\t\t\t\tfile_data.orig_name = file_data.name;\n\t\t\t\t\t\t\t\t\tfile_data.name = response.files[i];\n\t\t\t\t\t\t\t\t\tfile_data.is_file = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\t_value = normalise_file(value, root, root_url);\n\t\t\t\t\t}\n\t\t\t\t\tdispatch(\"change\");\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<Block\n\t{visible}\n\tvariant={mode === \"dynamic\" && value === null ? \"dashed\" : \"solid\"}\n\tcolor={dragging ? \"green\" : \"grey\"}\n\tpadding={false}\n\t{elem_id}\n>\n\t<StatusTracker\n\t\t{...loading_status}\n\t\tstatus={pending_upload\n\t\t\t? \"generating\"\n\t\t\t: loading_status?.status || \"complete\"}\n\t/>\n\n\t{#if mode === \"dynamic\"}\n\t\t<FileUpload\n\t\t\t{label}\n\t\t\t{show_label}\n\t\t\tvalue={_value}\n\t\t\t{file_count}\n\t\t\t{file_types}\n\t\t\ton:change={({ detail }) => (value = detail)}\n\t\t\ton:drag={({ detail }) => (dragging = detail)}\n\t\t\ton:clear\n\t\t\ton:upload\n\t\t>\n\t\t\t<UploadText type=\"file\" />\n\t\t</FileUpload>\n\t{:else}\n\t\t<FileComponent value={_value} {label} {show_label} />\n\t{/if}\n</Block>\n","export { default as Component } from \"./File.svelte\";\nexport const modes = [\"static\", \"dynamic\"];\n\nexport const document = (config: Record<string, any>) => ({\n\ttype: \"{ name: string; data: string }\",\n\tdescription: \"file name and base64 data as an object\",\n\texample_data: {\n\t\tname: \"zip.zip\",\n\t\tdata: \"data:@file/octet-stream;base64,UEsFBgAAAAAAAAAAAAAAAAAAAAAAAA==\"\n\t}\n});\n"],"names":["File"],"mappings":"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"}